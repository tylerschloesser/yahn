import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import React, { Fragment } from 'react'
import styles from '../../styles/Story.module.css'
import { useRouter } from 'next/router'
import { ParsedUrlQuery } from 'querystring'

// TODO move this to shared package
export enum ItemType {
  Job = 'job',
  Story = 'story',
  Comment = 'comment',
  Poll = 'poll',
  PollOpt = 'pollopt',
}

// TODO move this to shared package
export interface ItemAttributes {
  id: number
  deleted: boolean
  type: ItemType
  by: string
  time: Date
  text: string | null
  dead: boolean
  parent: number | null
  kids: number[] | null
  url: string | null
  score: number | null
  title: string | null
  descendants: number | null
}

function parseStoryId(query: ParsedUrlQuery) {
  const id = query.id
  if (!id || typeof id !== 'string') {
    throw Error(`invalid story id: "${id}"`)
  }
  return parseInt(id)
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const storyId = parseStoryId(context.query)

  const params = Object.entries({
    parent_id: storyId,
  })
    .map(([k, v]) => `${k}=${v}`)
    .join('&')
  const items: ItemAttributes[] = await fetch(
    `http://localhost:3000/rpc/comments?${params}`,
  ).then((res) => res.json())
  return { props: { items } }
}

interface StoryProps {
  items: ItemAttributes[]
}

const Story: NextPage<StoryProps> = ({ items }) => {
  const storyId = parseStoryId(useRouter().query)
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {items
          .filter((item) => item.parent === storyId)
          .map((item) => (
            <div key={item.id}>
              <div>{item.by}</div>
              <pre className={styles.text}>{item.text}</pre>
            </div>
          ))}
      </main>
    </div>
  )
}

export default Story
